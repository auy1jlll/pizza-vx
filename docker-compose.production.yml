# ðŸš€ FULL DOCKER CONTAINER DEPLOYMENT
# App + Database both containerized per contract

services:
  # PostgreSQL Database Container
  postgres-container:
    image: postgres:16-alpine
    container_name: pizza-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: pizzax
      POSTGRES_USER: auy1jll66
      POSTGRES_PASSWORD: "_Zx-nake_6172"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups91125:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auy1jll66 -d pizzax"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pizza-network

  # Next.js App Container  
  pizza-app-container:
    build:
      context: .
      dockerfile: Dockerfile.container
    container_name: pizza-app-prod
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://auy1jll66:_Zx-nake_6172@postgres-container:5432/pizzax
      - NEXT_TELEMETRY_DISABLED=1
    ports:
      - "3000:3000"
    depends_on:
      postgres-container:
        condition: service_healthy
    networks:
      - pizza-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  pizza-network:
    driver: bridge
